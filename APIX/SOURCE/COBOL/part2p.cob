000100 IDENTIFICATION DIVISION.
000200 PROGRAM-ID. PART2P.
000300 AUTHOR.     HINKOKO.
000400*********************************************************
000500*    THIS PROGRAM IS INTENDED TO :                      *
000600*     - INSERT NEW SALES IN DB2                         *
000700*      - PERFORM A SYNCHRONIZED READ ON ASIA AND        *
000800*      - EUROPEAN SALES                                 *
000900*********************************************************
001000
001100 ENVIRONMENT DIVISION.
001200 INPUT-OUTPUT SECTION.
001300 FILE-CONTROL.
001400        SELECT VENTEU ASSIGN TO FVENTEU.
001500        SELECT VENTAS ASSIGN TO FVENTAS.
001600*******************************************
001700 DATA DIVISION.
001800 FILE SECTION.
001900 FD VENTAS.
002000 COPY VTAS.
002100
002200 FD VENTEU.
002300 COPY VTEU.
002400
002500 WORKING-STORAGE SECTION.
002600 COPY VTSTRUCT.
002700
002800*** VARS CLASSIQUES
002900 77 WS-VENTEU       PIC 9     VALUE 0.
003000      88 FF-VENTEU            VALUE 1.
003100 77 WS-VENTAS       PIC 9     VALUE 0.
003200      88 FF-VENTAS            VALUE 1.
003300 77 WS-ANO          PIC 9.
003400 77 WS-VAR          PIC 9     VALUE 0.
003500 01 ED-SQLCODE      PIC +Z(8)9.
003600 77 WS-MSG          PIC X(20) VALUE 'DEFAULT MSG'.
003700
003800 77 EU-CMD-CURR     PIC 9(3).
003900 77 AS-CMD-CURR     PIC 9(3).
004000 77 CUST-COMM       PIC 9(8)V9(2).
004100 77 CUST-COMM-TOTAL PIC 9(8)V9(2).
004200 77 CUST-COMM-UP    PIC S9(8)V9(2) USAGE COMP-3.
004300 77 WS-PRICE        PIC S9(3)V9(2).
004400 77 SEP             PIC X(20)      VALUE ALL SPACES.
004500**  SS PROG  ***
004600 77 WS-DATEPROG     PIC X(8) VALUE 'CONVDATE'.
004700 77 WS-FORMAT       PIC X(2) VALUE 'US'.
004800*****************
004900
005000*****************       DB2      ***************
005100     EXEC SQL INCLUDE SQLCA    END-EXEC
005200     EXEC SQL INCLUDE ORD      END-EXEC
005300     EXEC SQL INCLUDE ITE      END-EXEC
005400     EXEC SQL INCLUDE PRO      END-EXEC
005500     EXEC SQL INCLUDE CUS      END-EXEC
005600***********************************************
005700
005800
005900********************
006000 PROCEDURE DIVISION.
006100     OPEN INPUT VENTEU VENTAS
006200     PERFORM LECT-VENTEU
006300     PERFORM LECT-VENTAS
006400     DISPLAY 'CMD EUROPE N  ' EU-O-NO
006500     DISPLAY 'CMD ASIA   N  ' AS-O-NO
006600
006700     PERFORM UNTIL FF-VENTEU AND FF-VENTAS
006800        PERFORM EVAL-SALES-FILES
006900     END-PERFORM
007000
007100     CLOSE VENTEU VENTAS
007200
007300     GOBACK.
007400
007500* PARAGRAPHS
007600 LECT-VENTEU.
007700     READ VENTEU AT END
007800        SET  FF-VENTEU TO TRUE
007900        MOVE 999      TO EU-O-NO
008000        DISPLAY 'FIN FICHIER VENTE EUROPE'
008100     END-READ.
008200
008300 LECT-VENTAS.
008400     READ VENTAS AT END
008500        SET  FF-VENTAS TO TRUE
008600        MOVE 999       TO AS-O-NO
008700        DISPLAY 'FIN FICHIER VENTE ASIE'
008800     END-READ.
008900
009000 EVAL-SALES-FILES.
009100     EVALUATE TRUE
009200          WHEN EU-O-NO < AS-O-NO
009300              MOVE ENR-VENTES-EU TO ENR-VENTE-ST
009400              PERFORM UPDATE-ORDER
009500              PERFORM TRAIT-EU
009600          WHEN EU-O-NO > AS-O-NO
009700              MOVE ENR-VENTES-AS TO ENR-VENTE-ST
009800              PERFORM UPDATE-ORDER
009900              PERFORM TRAIT-AS
010000          WHEN OTHER
010100              MOVE ENR-VENTES-EU TO ENR-VENTE-ST
010200              PERFORM UPDATE-ORDER
010300              PERFORM TRAIT-EU
010400              PERFORM TRAIT-AS
010500          END-EVALUATE.
010600
010700 FETCH-PRICE.
010800     MOVE ENR-P-NO TO PRO-P-NO
010900     EXEC SQL
011000        SELECT PRICE
011100        INTO :PRO-PRICE
011200        FROM API10.PRODUCTS
011300        WHERE P_NO = :PRO-P-NO
011400     END-EXEC
011500     MOVE 'FETCH PRICE ' TO WS-MSG
011600     PERFORM TEST-SQLCODE
011700     .
011800
011900 TRAIT-EU.
012000     DISPLAY 'EU-O-NO ' EU-O-NO
012100
012200     INITIALIZE ENR-VENTE-ST
012300     INITIALIZE CUST-COMM-TOTAL
012400
012500     MOVE EU-O-NO TO EU-CMD-CURR
012600
012700     PERFORM UNTIL EU-CMD-CURR NOT = EU-O-NO OR FF-VENTEU
012800
012900         MOVE ENR-VENTES-EU TO ENR-VENTE-ST
013000         PERFORM UPDATE-ITEMS
013100         PERFORM LECT-VENTEU
013200
013300     END-PERFORM
013310     PERFORM UPDATE-CA-CUSTOMER
013400     .
013500
013600 TRAIT-AS.
013700     DISPLAY 'AS-O-NO ' AS-O-NO
013800
013900     INITIALIZE ENR-VENTE-ST
014000     INITIALIZE CUST-COMM-TOTAL
014100
014200     MOVE AS-O-NO TO AS-CMD-CURR
014300
014400     PERFORM UNTIL AS-CMD-CURR NOT = AS-O-NO OR FF-VENTAS
014500
014600         MOVE ENR-VENTES-AS TO ENR-VENTE-ST
014700         PERFORM UPDATE-ITEMS
014800         PERFORM LECT-VENTAS
014900
015000     END-PERFORM
015100     PERFORM UPDATE-CA-CUSTOMER
015200     .
015300
015400
015500 UPDATE-ORDER.
015600     DISPLAY '---- UPDATING ORDERS ------'
015700     DISPLAY 'ENR-O-NO '     ENR-O-NO
015800     DISPLAY 'ENR-O-DATE'    ENR-O-DATE
015900     DISPLAY 'ENR-E-NO '     ENR-E-NO
016000     DISPLAY 'ENR-C-NO '     ENR-C-NO
016100     DISPLAY 'ENR-P-NO '     ENR-P-NO
016200     DISPLAY 'ENR-PRICE '    ENR-PRICE
016300     DISPLAY 'ENR-QUANTITY ' ENR-QUANTITY
016400     DISPLAY '------- FF UPDATE ORDERS ---'
016500     DISPLAY SEP
016600
016700     CALL WS-DATEPROG USING ENR-O-DATE WS-FORMAT
016800
016900     MOVE ENR-O-NO     TO ORD-O-NO
017000     MOVE ENR-E-NO     TO ORD-S-NO
017100     MOVE ENR-C-NO     TO ORD-C-NO
017200     MOVE ENR-O-DATE   TO ORD-O-DATE
017300
017400     EXEC SQL
017500       INSERT INTO
017600       API10.ORDERS(O_NO, S_NO, C_NO, O_DATE)
017700       VALUES (:ORD-O-NO, :ORD-S-NO, :ORD-C-NO, :ORD-O-DATE)
017800     END-EXEC
017900     PERFORM TEST-SQLCODE
018000     .
018100
018200 UPDATE-ITEMS.
018300     MOVE ENR-PRICE TO WS-PRICE
018400     IF WS-PRICE = 0 THEN
018500        PERFORM FETCH-PRICE
018600        MOVE PRO-PRICE TO ENR-PRICE
018700     END-IF
018800
018900     MOVE ENR-O-NO       TO ITE-O-NO
019000     MOVE ENR-P-NO       TO ITE-P-NO
019100     MOVE ENR-QUANTITY   TO ITE-QUANTITY
019200     MOVE ENR-PRICE      TO ITE-PRICE
019300
019400     DISPLAY '----INSIDE ITEMS----'
019500     DISPLAY 'IT-O-NO ' ITE-O-NO
019600     DISPLAY 'IT-P-NO ' ITE-P-NO
019700     DISPLAY 'IT-QUANT ' ITE-QUANTITY
019800     DISPLAY 'IT-PRICE ' ITE-PRICE
019900     DISPLAY '----INSIDE ITEMS FF ---'
020000     DISPLAY SEP
020100
020200     EXEC SQL
020300        INSERT INTO
020400        API10.ITEMS(O_NO, P_NO, QUANTITY, PRICE)
020500        VALUES (:ITE-O-NO, :ITE-P-NO, :ITE-QUANTITY, :ITE-PRICE)
020600     END-EXEC
020700     MOVE 'UPDATING ITEMS' TO WS-MSG
020800     PERFORM TEST-SQLCODE
020900     PERFORM CUMUL-CA-CUSTOMER
021000     .
021100
021200 CUMUL-CA-CUSTOMER.
021300     COMPUTE CUST-COMM = ENR-PRICE * ENR-QUANTITY
021400     ADD CUST-COMM TO CUST-COMM-TOTAL
021500     .
021600
021700 UPDATE-CA-CUSTOMER.
021800     MOVE CUST-COMM-TOTAL TO CUST-COMM-UP
021900     MOVE ORD-C-NO  TO CUS-C-NO
022000     EXEC SQL
022100       UPDATE API10.CUSTOMERS
022200       SET BALANCE = BALANCE + :CUST-COMM-UP
022300       WHERE C_NO = :CUS-C-NO
022400     END-EXEC
022500     PERFORM TEST-SQLCODE
022600     .
022700
022800 TEST-SQLCODE.
022900     EVALUATE TRUE
023000          WHEN SQLCODE = ZERO
023100             CONTINUE
023200          WHEN SQLCODE = -803
023300             DISPLAY
023400               'ERREUR INSERT : DOUBLON SUR CODE '
023500          WHEN SQLCODE > ZERO
023600             IF SQLCODE = +100
023700               DISPLAY  'CODE XX INTROUVABLE POUR OPERATION '
023800             END-IF
023900             MOVE SQLCODE TO ED-SQLCODE
024000             DISPLAY 'WARNING : ' ED-SQLCODE
024100          WHEN OTHER
024200             DISPLAY 'MSG -> ' WS-MSG
024300             MOVE SQLCODE TO ED-SQLCODE
024400             DISPLAY 'ANOMALIE ' ED-SQLCODE
024500             PERFORM ABEND-PROG
024600      END-EVALUATE.
024700
024800 ABEND-PROG.
024900     EXEC SQL ROLLBACK END-EXEC
025000     DISPLAY 'ROLLING BACK TO PREV TABLE STATE'
025100     COMPUTE WS-ANO = 1 / WS-ANO.
025200
