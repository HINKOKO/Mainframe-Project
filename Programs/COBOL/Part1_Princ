IDENTIFICATION DIVISION.
PROGRAM-ID. IPROD.

ENVIRONMENT DIVISION.
CONFIGURATION SECTION.
SPECIAL-NAMES.
    DECIMAL-POINT IS COMMA.
INPUT-OUTPUT SECTION.
FILE-CONTROL.
       SELECT NEWS ASSIGN TO FICNEWS.
******************************************
DATA DIVISION.
FILE SECTION.
FD NEWS.
01 ENR-NEWS.
   05 ENR-CSV      PIC X(45).

WORKING-STORAGE SECTION.
* VARS INTERMEDIAIRES POUR PARSER LIGNES CSV *
01 PROD-NO         PIC X(3).
01 PROD-DESC       PIC X(20).
01 PROD-PRICE      PIC 9(3)V99.
01 PROD-PRICE-CSV  PIC X(6).
01 PROD-DEVISE     PIC X(2).
** VARS CLASSIQUES
77 NEWS-FLAG       PIC 9 VALUE 0.
     88 FF-NEWS         VALUE 1.
77 USD-AMOUNT      PIC 9(3)V99.
77 WS-ANO          PIC 9 VALUE 0.
01 ED-SQLCODE      PIC +Z(8)9.

** SOUS PROG ***
77 WS-SSPROG       PIC X(8) VALUE 'CONVERT'.

** STRING MANIP UPPER AND LOWER ****
01 TMP-DESC        PIC X(20).
01 FIRST-CHAR      PIC X.
01 LAST-CHARS      PIC X(19).
**************** SQL *******
    EXEC SQL INCLUDE SQLCA END-EXEC
    EXEC SQL INCLUDE PRODUCTS END-EXEC

PROCEDURE DIVISION.
    OPEN INPUT NEWS
    PERFORM LECT-NEWS

    PERFORM UNTIL FF-NEWS
       PERFORM PARSE-LINE
       PERFORM USD-CONVERT
       IF PROD-PRICE  > 0
           MOVE PROD-NO             TO PR-P-NO
           MOVE PROD-PRICE          TO PR-PRICE
           PERFORM FORMAT-DESC
           PERFORM INSERT-DB
       ELSE
           DISPLAY 'ERREUR CONVERSION SUR PROD-NO : '
                PROD-NO
       END-IF
       PERFORM LECT-NEWS
    END-PERFORM
    GOBACK.
	 
*PARAGRAPHS
LECT-NEWS.
    READ NEWS AT END
       SET FF-NEWS TO TRUE
       DISPLAY 'FIN FICHIER NEWS'
    END-READ.

PARSE-LINE.
    UNSTRING ENR-CSV DELIMITED BY ';'
       INTO PROD-NO
            PROD-DESC
            PROD-PRICE-CSV
            PROD-DEVISE
    END-UNSTRING
    COMPUTE PROD-PRICE = FUNCTION NUMVAL(PROD-PRICE-CSV).

USD-CONVERT.
    CALL WS-SSPROG USING
             PROD-DEVISE
             PROD-PRICE.

FORMAT-DESC.
     MOVE PROD-DESC TO TMP-DESC
     MOVE TMP-DESC(1:1) TO FIRST-CHAR
     MOVE TMP-DESC(2:19) TO LAST-CHARS
     MOVE FUNCTION UPPER-CASE(FIRST-CHAR) TO FIRST-CHAR
     MOVE FUNCTION LOWER-CASE(LAST-CHARS) TO LAST-CHARS
     INITIALIZE PROD-DESC
     MOVE FIRST-CHAR TO PROD-DESC(1:1)
     MOVE LAST-CHARS TO PROD-DESC(2:19)
     MOVE LENGTH OF PROD-DESC TO PR-DESCRIPTION-LEN
     MOVE PROD-DESC           TO PR-DESCRIPTION-TEXT.

INSERT-DB.
    EXEC SQL
      INSERT INTO API2.PRODUCTS
        (P_NO,DESCRIPTION,PRICE)
        VALUES (:PR-P-NO,
                :PR-DESCRIPTION,
                :PR-PRICE)
    END-EXEC
    PERFORM EVAL-INSERT.

EVAL-INSERT.
    EVALUATE TRUE
        WHEN SQLCODE = ZERO
           CONTINUE
        WHEN SQLCODE = -803
           DISPLAY
             'ERREUR INSERT : DOUBLON SUR-> ' PROD-NO
        WHEN SQLCODE > ZERO
           DISPLAY 'WARNING : ' ED-SQLCODE
        WHEN OTHER
           DISPLAY 'ANOMALIE ' SQLCODE
           PERFORM ABEND-PROG
     END-EVALUATE.

ABEND-PROG.
    EXEC SQL ROLLBACK END-EXEC
    DISPLAY 'ROLLING BACK TO PREV TABLE STATE'
    COMPUTE WS-ANO = 1 / WS-ANO.
